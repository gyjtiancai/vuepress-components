(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{398:function(v,_,e){"use strict";e.r(_);var t=e(42),s=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h2",{attrs:{id:"node-js简介"}},[v._v("Node.js简介")]),v._v(" "),e("p",[v._v("Node.js 是一个开源与跨平台的 JavaScript 运行时环境")]),v._v(" "),e("p",[v._v("Node.js 在浏览器外运行 V8 JavaScript 引擎（Google Chrome 的内核）")]),v._v(" "),e("p",[v._v("Node.js 具有独特的优势，因为为浏览器编写 JavaScript 的数百万前端开发者现在除了客户端代码之外还可以编写服务器端代码，执行 I/O 操作（例如从网络读取、访问数据库或文件系统），而无需学习完全不同的语言")]),v._v(" "),e("h2",{attrs:{id:"node-js-与浏览器的区别"}},[v._v("Node.js 与浏览器的区别")]),v._v(" "),e("h3",{attrs:{id:"相同"}},[v._v("相同")]),v._v(" "),e("p",[v._v("浏览器和 Node.js 均使用 JavaScript 作为其编程语言。")]),v._v(" "),e("h3",{attrs:{id:"不同"}},[v._v("不同")]),v._v(" "),e("p",[v._v("Node.js 应用程序具有巨大的优势：使用单一语言轻松编程完成前端和后端")]),v._v(" "),e("p",[v._v("在浏览器中，大多数时候做的是与 DOM 或其​​他 Web 平台 API（例如 Cookies）进行交互")]),v._v(" "),e("p",[v._v("Node.js 中是不存在的。 没有浏览器提供的 document、window、以及所有其他的对象")]),v._v(" "),e("p",[v._v("而且在浏览器中，不存在 Node.js 通过其模块提供的所有不错的 API，例如文件系统访问功能")]),v._v(" "),e("p",[v._v("Node.js 中使用 require()，而在浏览器中则使用 import")]),v._v(" "),e("h2",{attrs:{id:"v8-javascript-引擎"}},[v._v("V8 JavaScript 引擎")]),v._v(" "),e("p",[v._v("V8 是为 Google Chrome 提供支持的 JavaScript 引擎的名称。 当使用 Chrome 进行浏览时，它负责处理并执行 JavaScript")]),v._v(" "),e("p",[v._v("V8 提供了执行 JavaScript 的运行时环境。 DOM 和其他 Web 平台 API 则由浏览器提供")]),v._v(" "),e("p",[v._v("很酷的是，JavaScript 引擎独立于托管它的浏览器。 此关键的特性推动了 Node.js 的兴起。 V8 于 2009 年被选为为 Node.js 提供支持的引擎，并且随着 Node.js 的爆炸性发展，V8 成为了现在为大量的服务器端代码（使用 JavaScript 编写）提供支持的引擎")]),v._v(" "),e("p",[v._v("V8 使用 C++ 编写")]),v._v(" "),e("h2",{attrs:{id:"npm-简介"}},[v._v("npm 简介")]),v._v(" "),e("p",[v._v("npm 是 Node.js 标准的软件包管理器")]),v._v(" "),e("h2",{attrs:{id:"node-js-事件循环"}},[v._v("Node.js 事件循环")]),v._v(" "),e("p",[v._v("事件循环阐明了 Node.js 如何做到异步且具有非阻塞的 I/O")]),v._v(" "),e("h2",{attrs:{id:"使用-node-js-读取文件"}},[v._v("使用 Node.js 读取文件")]),v._v(" "),e("p",[v._v("fs.readFile() 和 fs.readFileSync() 都会在返回数据之前将文件的全部内容读取到内存中。")]),v._v(" "),e("p",[v._v("这意味着大文件会对内存的消耗和程序执行的速度产生重大的影响。")]),v._v(" "),e("p",[v._v("在这种情况下，更好的选择是使用流来读取文件的内容。")]),v._v(" "),e("p",[v._v("写入文件同理")]),v._v(" "),e("h2",{attrs:{id:"node-js-流"}},[v._v("Node.js 流")]),v._v(" "),e("p",[v._v("流是一种以高效的方式处理读/写文件、网络通信、或任何类型的端到端的信息交换")]),v._v(" "),e("p",[v._v("在传统的方式中，当告诉程序读取文件时，这会将文件从头到尾读入内存，然后进行处理。")]),v._v(" "),e("p",[v._v("使用流，则可以逐个片段地读取并处理（而无需全部保存在内存中）。")]),v._v(" "),e("h3",{attrs:{id:"优点"}},[v._v("优点")]),v._v(" "),e("p",[v._v("内存效率: 无需加载大量的数据到内存中即可进行处理。\n时间效率: 当获得数据之后即可立即开始处理数据，这样所需的时间更少，而不必等到整个数据有效负载可用才开始。")])])}),[],!1,null,null,null);_.default=s.exports}}]);